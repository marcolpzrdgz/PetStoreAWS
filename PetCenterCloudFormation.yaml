AWSTemplateFormatVersion: 2010-09-09
Description: 'EC2, RDS and VPC for PetStore' 

Parameters:
  # Operations
  PetCenter:
    Default: PCenter
    Description: Pet Cloud Center
    Type: String

  # Networking Parameters  
  VPCName:
    Default: mainvpc
    Description: The name of the VPC being created.
    Type: String
  VPCBase:
    Default: 192.168.250
    Description: First 3 octets of VPC address space
    Type: String

  # Database parameters
  DBName:
    Default: petDb
    Description: The database name
    Type: String
    MinLength: 1
    MaxLength: 64
  DBUser:
    Default: dbuser
    Description: The database admin account username
    Type: String
    MinLength: 1
    MaxLength: 16
  DBPassword:
    Default: pet123456!
    NoEcho: true
    Description: The database admin account password
    Type: String
    MinLength: 1
    MaxLength: 40
  DBAllocatedStorage:
    Default: 5
    Description: The size of the database (Gb)
    Type: Number
    MinValue: 5
    MaxValue: 1024
    ConstraintDescription: must be between 5 and 1024Gb.
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues: [db.t2.micro, db.t2.small, db.t2.medium, db.t2.large]
    ConstraintDescription: must select a valid database instance type.

  # EC2 parameters
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  LatestAmiId:
    Type:  AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: IP CIDR range x.x.x.x/x.  
  EC2KeyName:
    Description: The SSH KeyPair to configure the EC2 instance to require
    Type: String
    MinLength: 1
    MaxLength: 32
    Default: petCenterKey

# Metadata section allows for paramter grouping
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
    - Label: 
        default: Operations
      Parameters: 
      - PetCenter
    - Label: 
        default: Network Configuration
      Parameters: 
      - VPCName
      - VPCBase
    - Label: 
        default: RDS Configuration
      Parameters: 
      - DBName
      - DBUser
      - DBPassword
      - DBAllocatedStorage
      - DBInstanceClass
    - Label: 
        default: EC2 Configuration
      Parameters: 
      - InstanceType
      - LatestAmiId
      - SSHLocation
      - EC2KeyName
    
Resources:
  # Networking
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Sub ${VPCBase}.0/24
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Sub ${VPCBase}.0/25
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter

  DBSubnetAZA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Sub ${VPCBase}.128/26
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter

  DBSubnetAZB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: !Sub ${VPCBase}.192/26
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter

  VPCRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter

  InternetGatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPCRouteTable
      SubnetId: !Ref PublicSubnet

  VPCPublicDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref VPCRouteTable
      GatewayId: !Ref InternetGateway

  # Database 
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: !Sub ${AWS::StackName}-rds-subnet-group
      SubnetIds: 
      - !Ref DBSubnetAZA
      - !Ref DBSubnetAZB
      Tags: 
      - Key: PetCenter
        Value: !Ref PetCenter

  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open database for access
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: !GetAtt [InstanceSecurityGroup, GroupId]
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter
  
  MasterDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: MySQL
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      MultiAZ: false
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups: 
      - !Ref DBEC2SecurityGroup
      StorageEncrypted: true
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter
    DeletionPolicy: Snapshot

  # EC2
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22 and port 4000 for nodeJS
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 4000
        ToPort: 4000
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: PublicSubnet
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAmiId
      KeyName: !Ref EC2KeyName
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeleteOnTermination : true
        SubnetId: !Ref PublicSubnet
        DeviceIndex: 0
        GroupSet: 
        - !Ref InstanceSecurityGroup
      Tags:
      - Key: PetCenter
        Value: !Ref PetCenter

Outputs:
  # Networking  
  PetCenter:
    Description: Pet Center
    Value: !Ref PetCenter
  VPCId:
    Description: VPCId of VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-VPC
  PublicSubnet:
    Description: SubnetId of public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PublicSubnet
  DBSubnetAZA:
    Description: SubnetId of public subnet 0
    Value: !Ref DBSubnetAZA
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DBSubnetAZA
  DBSubnetAZB:
    Description: SubnetId of public subnet 0
    Value: !Ref DBSubnetAZB
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DBSubnetAZB
  DefaultSecurityGroup:
    Description: DefaultSecurityGroup Id
    Value: !GetAtt VPC.DefaultSecurityGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DefaultSecurityGroup

  # RDS
  MasterRDSEndpoint:
    Description: RDS Endpoint address
    Value: !GetAtt [MasterDB, Endpoint.Address]    

  # EC2    
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]